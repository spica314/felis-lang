'(module 
    (type And (A : Prop) (B : Prop) (
        (conj : A -> B -> And A B)
    ))
    (type Or (A : Prop) (B : Prop) (
        (or_introl : A -> Or A B)
        (or_intror : B -> Or A B)
    ))
    (prop theorem1
        (forall (A : Prop) forall (B : Prop) And A B -> Or A B)
    )
    (proof theorem1
        (fun (A : Prop) (B : Prop) (x : And A B) 
            (match x
                ((conj l r) (or_introl l))
            )
        )
    )
)
