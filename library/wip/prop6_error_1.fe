#type Exists : Prop -> Prop -> Prop {
    exists : (A : Prop) -> (p : A -> Prop) -> (x : A) -> Exists A p,
}

#theorem theorem1 = #forall (A : Prop), #forall (B : Prop), #forall (p : A -> Prop), Exists A p -> (A -> B) -> B {
    #fn proof : (A : Prop) -> (B : Prop) -> (p : A -> Prop) -> (e : Exists A p) -> (f : A -> B) -> B {
        #match e {
            Exists::exists _ _ x => x,
        }
    }
}
