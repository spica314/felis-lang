#entrypoint main;

#use_builtin "syscall" #as __syscall;
#use_builtin "f32_add" #as __f32_add;
#use_builtin "f32_to_u64" #as __f32_to_u64;
#use_builtin "f32" #as __f32;

#array Points {
    #item: #struct {
        x: __f32,
        y: __f32,
        z: __f32,
    },
    #dimension: 1,
}

#proc main : () -> () {
    #let points = Points::#new_with_size 2;
    points.x 0 <- 5.0f32;
    points.y 0 <- 7.0f32;
    points.z 0 <- 9.0f32;
    points.x 1 <- 10.0f32;
    points.y 1 <- 14.0f32;
    points.z 1 <- 18.0f32;

    #let a = points .x 1 .*;
    #let s = __f32_add a (points .y 1 .*);
    #let t = __f32_add s (points .z 1 .*);

    #let syscall_id = 231u64;
    #let error_code = __f32_to_u64 t;
    __syscall syscall_id error_code 0 0 0 0;
}
