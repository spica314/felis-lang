#entrypoint main2;

#use_builtin "syscall" #as __syscall;
#use_builtin "syscall" #as __syscall;
#use_builtin "u64_add" #as __u64_add;
#use_builtin "u64_sub" #as __u64_sub;
#use_builtin "u64_div" #as __u64_div;
#use_builtin "u64_mod" #as __u64_mod;
#use_builtin "u64_mul" #as __u64_mul;
#use_builtin "u64_eq" #as __u64_eq;
#use_builtin "u64" #as __u64;
#use_builtin "f32" #as __f32;
#use_builtin "f32_mul" #as __f32_mul;
#use_builtin "f32_div" #as __f32_div;
#use_builtin "u64_to_f32" #as __u64_to_f32;
#use_builtin "f32_to_u64" #as __f32_to_u64;
#use_builtin "ctaid_x" #as __ctaid_x;
#use_builtin "ntid_x" #as __ntid_x;
#use_builtin "tid_x" #as __tid_x;

#array Pixels {
    #item: #struct {
        r: u64,
        g: u64,
        b: u64,
    },
    #dimension: 1,
    #new_with_size: new_with_size,
}

#proc print_c : (x: __u64) -> () {
    #let #mut y @ y_ref = x;
    __syscall 1 1 y_ref 1 0 0;
}

#proc print_num3 : (x: __u64) -> () {
    #let d0 = __u64_mod x 10;
    #let r0 = __u64_sub x d0;
    #let s0 = __u64_div r0 10;

    #let d1 = __u64_mod s0 10;
    #let r1 = __u64_sub s0 d1;
    #let s1 = __u64_div r1 10;

    #let d2 = __u64_mod s1 10;

    #let d0c = __u64_add d0 48;
    #let d1c = __u64_add d1 48;
    #let d2c = __u64_add d2 48;

    #if __u64_eq d2 0 {
        #if __u64_eq d1 0 {
            print_c d0c;
        } #else {
            print_c d1c;
            print_c d0c;
        };
    } #else {
        print_c d2c;
        print_c d1c;
        print_c d0c;
    };
}

#proc main2 : () -> () {
    #let ps = Pixels::new_with_size 4;
    ps.r 0 <- 0;
    ps.g 0 <- 1;
    ps.b 0 <- 2;
    ps.r 1 <- 3;
    ps.g 1 <- 4;
    ps.b 1 <- 5;
    ps.r 2 <- 6;
    ps.g 2 <- 7;
    ps.b 2 <- 8;
    ps.r 3 <- 9;
    ps.g 3 <- 10;
    ps.b 3 <- 11;

    #let #mut i @ y_ref = 0;

    print_c 80;
    print_c 51;
    print_c 10;
    print_num3 2;
    print_c 32;
    print_num3 2;
    print_c 10;
    print_num3 255;
    print_c 10;

    #loop {
        #if __u64_eq i 4 {
            #break;
        };

        #let r = (ps .r i .*);
        print_num3 r;
        print_c 32;

        #let g = (ps .g i .*);
        print_num3 g;
        print_c 32;

        #let b = (ps .b i .*);
        print_num3 b;
        print_c 10;

        y_ref <- __u64_add i 1;
    };

    __syscall 231 42 0 0 0 0;
}
